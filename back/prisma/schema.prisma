generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model liked {
  likedId     String    @id @unique(map: "likedId_UNIQUE") @db.VarChar(45)
  userId      String    @db.VarChar(45)
  challengeId Int
  challenge   challenge @relation(fields: [challengeId], references: [challengeId])
  user        user      @relation(fields: [userId], references: [userId])

  @@index([challengeId], map: "liked_challengeId_fkey")
  @@index([userId], map: "liked_userId_fkey")
}

model point {
  userId String @id @unique(map: "userId_UNIQUE") @db.VarChar(50)
  point  Int?
}

model user {
  userId          String            @id @db.VarChar(50)
  name            String            @db.VarChar(10)
  email           String            @db.VarChar(30)
  password        String            @db.VarChar(100)
  withdrawal      Int               @default(0) @db.TinyInt
  img             Bytes?            @db.Blob
  liked           liked[]
  refreshToken    refreshToken?
  userToChallenge userToChallenge[]
}

model refreshToken {
  userId       String @unique(map: "userId_UNIQUE")
  refreshToken String @db.VarChar(500)
  user         user   @relation(fields: [userId], references: [userId])
}

model challenge {
  challengeId        Int               @id @unique @default(autoincrement())
  title              String            @db.VarChar(50)
  holdUserId         String            @db.VarChar(50)
  description        String
  fromDate           String
  toDate             String
  mainImg            String            @db.Text
  explainImg         String            @db.Text
  startRemainingDate Int
  endRemainingDate   Int
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  joinedChallenge    joinedChallenge[]
  liked              liked[]
  userToChallenge    userToChallenge[]
}

model joinedChallenge {
  joinedId    Int       @id @unique @default(autoincrement())
  addedImage  String    @db.Text
  chalngId    Int
  countUpload Int
  challenge   challenge @relation(fields: [chalngId], references: [challengeId])

  @@index([chalngId], map: "joinedChallenge_chalngId_fkey")
}

model userToChallenge {
  userToChallengeId Int       @id @unique @default(autoincrement())
  userId            String    @db.VarChar(45)
  challengeId       Int
  challenge         challenge @relation(fields: [challengeId], references: [challengeId])
  user              user      @relation(fields: [userId], references: [userId])

  @@index([challengeId], map: "userToChallenge_challengeId_fkey")
  @@index([userId], map: "userToChallenge_userId_fkey")
}
